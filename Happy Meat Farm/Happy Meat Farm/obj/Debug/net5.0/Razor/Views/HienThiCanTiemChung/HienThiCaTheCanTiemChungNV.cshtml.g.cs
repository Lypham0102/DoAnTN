#pragma checksum "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1441cfa831a3701169311d32d740c7905692679c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_HienThiCanTiemChung_HienThiCaTheCanTiemChungNV), @"mvc.1.0.view", @"/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/_ViewImports.cshtml"
using Happy_Meat_Farm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/_ViewImports.cshtml"
using Happy_Meat_Farm.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1441cfa831a3701169311d32d740c7905692679c", @"/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d09711060e35f0da6d1d9a1ccff3216366cccabb", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_HienThiCanTiemChung_HienThiCaTheCanTiemChungNV : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
  
    ViewData["Title"] = "Công việc";
    Layout = "~/Views/Shared/_LayoutBlank.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    body {
        background-image: none;
        background-color: #f2f2f2;
        font-family: Arial, sans-serif;
        padding: 20px;
    }

    h2 {
        color: #333;
        margin-bottom: 20px;
    }

    p {
        color: #666;
        margin-bottom: 10px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    th {
        background-color: #f2f2f2;
    }

    tr:hover {
        background-color: #f9f9f9;
    }

    h3 {
        margin-top: 20px;
    }

    h4 {
        margin-top: 10px;
    }

    .dotTiem {
        background-color: #f9f9f9;
        padding: 10px;
        margin-top: 10px;
    }
</style>

<h2 style=""text-align: center;"">Lịch tiêm chủng</h2>

<p>Số lượng cá thể cần tiêm chủng: ");
#nullable restore
#line 60 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
                              Write(ViewBag.SoLuongCaTheCanTiemChung);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\n\n");
#nullable restore
#line 62 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
 if (Model.Count > 0)
{
    Dictionary<string, Dictionary<string, List<(CaThe, string, DateTime)>>> groups = new Dictionary<string, Dictionary<string, List<(CaThe, string, DateTime)>>>();

    foreach (var item in Model)
    {
        CaThe caThe = item.Item1;
        string tenDotTiem = item.Item2;
        int ngayTuoiTiemValue = item.Item3; // Thay đổi kiểu dữ liệu từ DateTime sang int
        DateTime ngayTuoiTiem = new DateTime(ngayTuoiTiemValue); // Tạo đối tượng DateTime từ giá trị int

        if (!groups.ContainsKey(caThe.Chuong))
        {
            groups[caThe.Chuong] = new Dictionary<string, List<(CaThe, string, DateTime)>>();
        }

        if (!groups[caThe.Chuong].ContainsKey(tenDotTiem))
        {
            groups[caThe.Chuong][tenDotTiem] = new List<(CaThe, string, DateTime)>();
        }

        groups[caThe.Chuong][tenDotTiem].Add((caThe, tenDotTiem, ngayTuoiTiem));
    }

    foreach (var chuong in groups)
    {

#line default
#line hidden
#nullable disable
            WriteLiteral("        <h3>Chuồng: ");
#nullable restore
#line 88 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
               Write(chuong.Key);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h3>\n");
#nullable restore
#line 89 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"

        foreach (var dotTiem in chuong.Value)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"dotTiem\">\n                <h4>Tên đợt tiêm: ");
#nullable restore
#line 93 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
                             Write(dotTiem.Key);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h4>

                <table>
                    <tr>
                        <th style=""width: 300px;"">ID cá thể</th>
                        <th>Tuổi cá thể (ngày)</th>
                        <th>Ngày tuổi tiêm / Tên đợt tiêm</th> <!-- Thay đổi tiêu đề cột -->
                        <th>Đã tiêm</th>
                    </tr>
");
#nullable restore
#line 102 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
                     foreach (var item in dotTiem.Value)
                    {
                        CaThe caThe = item.Item1;
                        string tenDotTiem = item.Item2;
                        DateTime ngayTuoiTiem = item.Item3;


#line default
#line hidden
#nullable disable
            WriteLiteral("                        <tr>\n                            <td>");
#nullable restore
#line 109 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
                           Write(caThe._id);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\n                            <td>");
#nullable restore
#line 110 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
                           Write(caThe.NgayTuoi);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\n                            <td>");
#nullable restore
#line 111 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
                           Write(tenDotTiem);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td> <!-- Hiển thị tên đợt tiêm -->\n                            <td>\n                                <input type=\"checkbox\"");
            BeginWriteAttribute("id", " id=\"", 3031, "\"", 3046, 1);
#nullable restore
#line 113 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
WriteAttributeValue("", 3036, caThe._id, 3036, 10, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" name=\"caTheIds\"");
            BeginWriteAttribute("value", " value=\"", 3063, "\"", 3081, 1);
#nullable restore
#line 113 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
WriteAttributeValue("", 3071, caThe._id, 3071, 10, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" data-tenDotTiem=\"");
#nullable restore
#line 113 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
                                                                                                                      Write(tenDotTiem);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" onclick=\"updateCaTheThuoc(this)\">\n                            </td>\n                        </tr>\n");
#nullable restore
#line 116 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </table>\n            </div>\n");
#nullable restore
#line 119 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
        }
    }
}
else
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <p>Không có cá thể cần tiêm chủng.</p>\n");
#nullable restore
#line 125 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/HienThiCanTiemChung/HienThiCaTheCanTiemChungNV.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div style=""height: 50px;""></div>

<script>// Lưu trạng thái tích vào sessionStorage khi thay đổi checkbox
    var checkboxes = document.getElementsByName(""caTheIds"");
    for (var i = 0; i < checkboxes.length; i++) {
        checkboxes[i].addEventListener(""change"", function () {
            sessionStorage.setItem(this.value, this.checked);
            updateCaTheThuoc(this); // Gọi hàm cập nhật thuốc chỉ cho checkbox này
        });

        // Khôi phục trạng thái tích từ sessionStorage khi load lại trang
        var isChecked = sessionStorage.getItem(checkboxes[i].value);
        if (isChecked === ""true"") {
            checkboxes[i].checked = true;
        } else {
            checkboxes[i].checked = false;
        }
    }

    // Gửi yêu cầu cập nhật thuốc khi thay đổi checkbox
    function updateCaTheThuoc(checkbox) {
        var caTheId = checkbox.value;
        var tenDotTiem = checkbox.getAttribute(""data-tenDotTiem""); // Lấy tên đợt tiêm từ thuộc tính dữ liệu
        var isChecked = checkbox.checked;");
            WriteLiteral(@"

        $.ajax({
            url: '/HienThiCanTiemChung/UpdateCaTheThuoc',
            type: 'POST',
            data: { caTheId: caTheId, tenDotTiem: tenDotTiem, isChecked: isChecked },
            success: function (result) {
                console.log(""Cập nhật thuốc thành công."");
            },
            error: function (xhr, status, error) {
                console.log(""Đã xảy ra lỗi: "" + error);
            }
        });
    }</script>


");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
