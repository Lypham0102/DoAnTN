#pragma checksum "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "787696d023f8ff725ea0241a8e833523b63ef766"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CaTheGiong_Index), @"mvc.1.0.view", @"/Views/CaTheGiong/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/_ViewImports.cshtml"
using Happy_Meat_Farm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/_ViewImports.cshtml"
using Happy_Meat_Farm.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"787696d023f8ff725ea0241a8e833523b63ef766", @"/Views/CaTheGiong/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d09711060e35f0da6d1d9a1ccff3216366cccabb", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_CaTheGiong_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<Happy_Meat_Farm.Models.CaTheGiong>>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Create", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("text-decoration: none; color: white;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Export", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 3 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
  
    ViewData["Title"] = "Cá thể giống";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<script>\n    var count = ");
#nullable restore
#line 9 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
           Write(Model.Count());

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
    console.log(""Số lượng thể giống đã được duyệt: "" + count);
</script>

<style>
    body {
        background-image: none;
        background-color: #f5f5f5;
        font-family: Arial, sans-serif;
    }

    h1 {
        text-align: center;
        margin-top: 20px;
        color: #333;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
        background-color: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        /*        border: 1px solid #ccc;*/
        border-radius: 10px; /* Thêm border-radius để bo góc bảng */
        transition: box-shadow 0.3s ease;
    }

        table:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Hiệu ứng đổ bóng khi di chuột vào */
        }

    th {
        background-color: #f8f8f8;
        color: #333;
        font-weight: bold;
        padding: 10px;
        text-align: left;
    }

    td {
        padding: 10px;
    }

    tr:nth-child(even) {
      ");
            WriteLiteral(@"  background-color: #f2f2f2;
    }

    tr:hover {
        background-color: #e0e0e0;
    }
    .custom-button {
        background-color: #800000;
        color: white;
        text-decoration: none;
        border: none;
        border-radius: 5px;
        padding: 8px 16px;
        margin-right: 10px;
    }

    .confirm-msg {
        color: red;
    }

    .highlight {
        border: none;
        background-color: #FAF0E6;
        color: black;
        padding: 2px 4px;
        border-radius: 20px;
        box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.4);
    }

    .highlight-phoi {
        background-color: #FFE4B5;
    }

    .btn-custom {
        background-color: #FF9999;
        border: 1px solid #ccc;
        /* Viền màu xám */
        box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        /* Bóng */
    }
</style>

<h1>Danh sách cá thể giống</h1>
<div style=""height: 10px;""></div>
<h5 style=""color: gray;"">Số lượng cá thể giống: ");
#nullable restore
#line 98 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
                                           Write(Model.Count());

#line default
#line hidden
#nullable disable
            WriteLiteral("</h5>\n<div style=\"height: 10px;\"></div>\n<div style=\"display: flex; align-items: center;\">\n    <button class=\"custom-button\">\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "787696d023f8ff725ea0241a8e833523b63ef7667164", async() => {
                WriteLiteral("Thêm cá thể");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n    </button>\n    <button class=\"custom-button\" onclick=\"filterPhoi()\">Cá thể vừa phối</button>\n    <a class=\"btn btn-primary btn-custom\"");
            BeginWriteAttribute("href", " href=\"", 2537, "\"", 2599, 1);
#nullable restore
#line 105 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
WriteAttributeValue("", 2544, Url.Action("DuyetCacCaTheGiongMangThai", "CaTheGiong"), 2544, 55, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@">Cá Thể Mang Thai</a>
</div>
<div style=""height: 10px;""></div>
<table class=""table"">
    <thead>
        <tr>
            <th style=""width: 120px"">Mã cá thể</th>
            <th style=""width: 120px"">Số chuồng</th>
            <th style=""width: 220px"">Tình trạng</th>
            <th style=""width: 100px"">Lần phối</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
");
#nullable restore
#line 119 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
         foreach (var item in Model)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <tr");
            BeginWriteAttribute("id", " id=\"", 3041, "\"", 3061, 2);
            WriteAttributeValue("", 3046, "row-", 3046, 4, true);
#nullable restore
#line 121 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
WriteAttributeValue("", 3050, item.MaCTG, 3050, 11, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\n                <td>\n                    ");
#nullable restore
#line 123 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.MaCTG));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                </td>\n                <td>\n                    ");
#nullable restore
#line 126 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.ViTriChuong));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                </td>\n                <td class=\"tinh-trang-suc-khoe\">\n                    ");
#nullable restore
#line 129 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.TinhTrangSucKhoe));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                </td>\n                <td class=\"lich-su-phoi\">\n                    ");
#nullable restore
#line 132 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.LichSuPhoi));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                </td>\n                <td>\n                    <button class=\"highlight\"");
            BeginWriteAttribute("onclick", " onclick=\"", 3621, "\"", 3691, 3);
            WriteAttributeValue("", 3631, "location.href=\'", 3631, 15, true);
#nullable restore
#line 135 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
WriteAttributeValue("", 3646, Url.Action("Edit", new { Name = item._id }), 3646, 44, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 3690, "\'", 3690, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Chỉnh sửa</button>\n                    <button class=\"highlight\"");
            BeginWriteAttribute("onclick", " onclick=\"", 3757, "\"", 3830, 3);
            WriteAttributeValue("", 3767, "location.href=\'", 3767, 15, true);
#nullable restore
#line 136 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
WriteAttributeValue("", 3782, Url.Action("Details", new { Name = item._id }), 3782, 47, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 3829, "\'", 3829, 1, true);
            EndWriteAttribute();
            WriteLiteral(">Chi tiết</button>\n                    <button class=\"highlight\"");
            BeginWriteAttribute("onclick", " onclick=\"", 3895, "\"", 3932, 3);
            WriteAttributeValue("", 3905, "phoiCatheGiong(\'", 3905, 16, true);
#nullable restore
#line 137 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
WriteAttributeValue("", 3921, item._id, 3921, 9, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 3930, "\')", 3930, 2, true);
            EndWriteAttribute();
            WriteLiteral(">Phối</button>\n                    <button class=\"highlight\"");
            BeginWriteAttribute("onclick", " onclick=\"", 3993, "\"", 4024, 3);
            WriteAttributeValue("", 4003, "khongDau(\'", 4003, 10, true);
#nullable restore
#line 138 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
WriteAttributeValue("", 4013, item._id, 4013, 9, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 4022, "\')", 4022, 2, true);
            EndWriteAttribute();
            WriteLiteral(">Không đậu</button>\n                    <button class=\"highlight\"");
            BeginWriteAttribute("onclick", " onclick=\"", 4090, "\"", 4120, 3);
            WriteAttributeValue("", 4100, "thuThai(\'", 4100, 9, true);
#nullable restore
#line 139 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
WriteAttributeValue("", 4109, item._id, 4109, 9, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 4118, "\')", 4118, 2, true);
            EndWriteAttribute();
            WriteLiteral(">Thụ thai</button>\n                </td>\n            </tr>\n");
#nullable restore
#line 142 "/Users/phamcongly/Documents/GitHub/DoAnTN/Happy Meat Farm/Happy Meat Farm/Views/CaTheGiong/Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("    </tbody>\n</table>\n<div style=\"text-align: right;\">\n    <div style=\"text-align: right;\">\n        <button class=\"custom-button\">\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "787696d023f8ff725ea0241a8e833523b63ef76614952", async() => {
                WriteLiteral("Xuất Excel");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </button>
    </div>
</div>

<script>

    let isFiltered = false;

    function filterPhoi() {
        const rows = document.getElementsByTagName(""tr"");
        for (let i = 0; i < rows.length; i++) {
            const row = rows[i];
            const tinhTrangCell = row.querySelector("".tinh-trang-suc-khoe"");
            if (tinhTrangCell) {
                const tinhTrang = tinhTrangCell.textContent.trim();
                if (!isFiltered && !tinhTrang.includes(""Vừa phối"")) {
                    row.style.display = ""none"";
                } else {
                    row.style.display = """";
                }
            }
        }
        isFiltered = !isFiltered;
    }

    function phoiCatheGiong(id) {
        if (confirm(`Bạn muốn phối cá thể này ${id} ?`)) {
            fetch(`/CaTheGiong/Phoi?id=${id}`, { method: 'POST' })
                .then(response => {
                    if (response.ok) {
                        const row = document.getElementById(`row-${id}`);
                       ");
            WriteLiteral(@" row.style.backgroundColor = '#FFE4B5';
                        row.classList.add('highlight-phoi');
                        const tinhTrangSucKhoeCell = row.querySelector('.tinh-trang-suc-khoe');
                        tinhTrangSucKhoeCell.textContent = `Vừa phối ${formatDate(new Date())}`;
                        location.reload(); // Tải lại trang
                    } else {
                        console.log('Lỗi khi cập nhật TinhTrangSucKhoe');
                    }
                });
        } else {
            let confirmMsg = document.getElementById(""confirm-msg"");
            confirmMsg.innerHTML = `<span class=""confirm-msg"">Bạn đã hủy thao tác phối cá thể ${id}.</span>`;
        }
    }



    function formatDate(date) {
        const day = String(date.getDate()).padStart(2, '0');
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const year = date.getFullYear();
        return `${day}/${month}/${year}`;
    }
    //Không đậu
    function khongDau(id) {
        if (conf");
            WriteLiteral(@"irm(`Bạn muốn đánh dấu cá thể ${id} là Không đậu?`)) {
            fetch(`/CaTheGiong/KhongDau?id=${id}`, { method: 'POST' })
                .then(response => {
                    if (response.ok) {
                        const row = document.getElementById(`row-${id}`);
                        row.style.backgroundColor = '#FAF0E6';
                        const tinhTrangSucKhoeCell = row.querySelector('.tinh-trang-suc-khoe');
                        tinhTrangSucKhoeCell.textContent = 'Tốt';
                        location.reload(); // Tải lại trang
                    } else {
                        console.log('Lỗi khi cập nhật TinhTrangSucKhoe');
                    }
                });
        } else {
            let confirmMsg = document.getElementById(""confirm-msg"");
            confirmMsg.innerHTML = `<span class=""confirm-msg"">Bạn đã hủy đánh dấu cá thể ${id} là Không đậu.</span>`;
        }
    }


    //ThuThai
    function thuThai(id) {
        if (confirm(`Bạn muốn đánh dấu cá thể ${id} là t");
            WriteLiteral(@"hụ thai không?`)) {
            const currentDate = formatDate(new Date());
            fetch(`/CaTheGiong/ThuThai?id=${id}&ngayThai=${currentDate}`, { method: 'POST' })
                .then(response => {
                    if (response.ok) {
                        const row = document.getElementById(`row-${id}`);
                        row.style.backgroundColor = '#FAF0E6';
                        const tinhTrangSucKhoeCell = row.querySelector('.tinh-trang-suc-khoe');
                        tinhTrangSucKhoeCell.textContent = 'Mang thai';
                        const lichSuPhoiCell = row.querySelector('.lich-su-phoi');
                        lichSuPhoiCell.textContent = '0';
                        location.reload(); // Tải lại trang
                    } else {
                        console.log('Lỗi khi cập nhật TinhTrangSucKhoe');
                    }
                });
        } else {
            let confirmMsg = document.getElementById(""confirm-msg"");
            confirmMsg.innerHTML = `<span ");
            WriteLiteral("class=\"confirm-msg\">Bạn đã hủy đánh dấu cá thể ${id} là thụ thai.</span>`;\n        }\n    }\n</script>\n<span id=\"confirm-msg\"></span>\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<Happy_Meat_Farm.Models.CaTheGiong>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
