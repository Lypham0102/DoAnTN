@{
    ViewData["Title"] = "Cá thể giống";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* CSS cho form */
    #deliveryForm {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #f1f1f1;
        padding: 20px;
        border-radius: 5px;
        z-index: 9999;
    }

        #deliveryForm input[type="number"] {
            padding: 10px;
            margin-bottom: 10px;
            width: 100%;
            box-sizing: border-box;
        }

        #deliveryForm button[type="submit"] {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
            width: 100%;
        }

            #deliveryForm button[type="submit"]:hover {
                background-color: #45a049;
            }

    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 400px;
        margin: 0 auto;
        margin-top: 100px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        padding: 20px;
    }

        .modal-content h2 {
            text-align: center;
            margin-bottom: 20px;
        }

        .modal-content .close {
            margin-left: auto;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
        }

            .modal-content .close:hover {
                color: #800000;
            }

        .modal-content ul {
            list-style: none;
            padding: 0;
            margin-bottom: 20px;
        }

            .modal-content ul li {
                padding: 10px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                .modal-content ul li:hover {
                    background-color: #f2f2f2;
                }

                .modal-content ul li.selected {
                    background-color: #FAF0E6;
                }

        .modal-content .button-container {
            display: flex;
            justify-content: center;
            margin-bottom: 10px;
        }

            .modal-content .button-container button {
                width: 150px;
                margin-right: 10px;
            }

    #sanDeList {
        max-height: 150px;
        overflow-y: auto;
        margin: 10px auto 20px;
        padding: 0;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        #sanDeList li {
            padding: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            #sanDeList li:hover {
                background-color: #f2f2f2;
            }

            #sanDeList li.selected {
                background-color: #FAF0E6;
            }

    body {
        background-image: none;
        background-color: #f5f5f5;
        font-family: Arial, sans-serif;
    }

    h1 {
        text-align: center;
        margin-top: 20px;
        color: #333;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
        background-color: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        transition: box-shadow 0.3s ease;
    }

        table:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

    th {
        background-color: #f8f8f8;
        color: #333;
        font-weight: bold;
        padding: 10px;
        text-align: left;
    }

    td {
        padding: 10px;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    tr:hover {
        background-color: #e0e0e0;
    }

    .highlight {
        border: none;
        background-color: #FAF0E6;
        color: black;
        padding: 2px 4px;
        border-radius: 20px;
        box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.4);
    }
</style>

<h1>Danh sách các cá thể giống mang thai</h1>
<div style="height: 10px;"></div>
<button class="highlight" style="background-color: #800000; color:white" onclick="filterCatheGiong()">Sắp đẻ</button>
<div style="height: 5px;"></div>
<table>
    <tr>
        <th>Mã cá thể</th>
        <th>Vị trí</th>
        <th>Ngày thụ thai</th>
        <th>Ngày dự đoán đẻ</th>
        <th>Số ngày còn lại</th>
        <th>Sàn đẻ</th>
    </tr>
    @foreach (var catheGiong in Model)
    {
        <tr>
            <td>@catheGiong.MaCTG</td>
            <td id="viTriChuong_@catheGiong.MaCTG">@catheGiong.ViTriChuong</td>
            <td>@catheGiong.NgayThai.ToString("dd/MM/yyyy")</td>
            <td>@catheGiong.NgayDuDoanDe.ToString("dd/MM/yyyy")</td>
            <td>@catheGiong.SoNgayConLai</td>
            <td>
                <button class="highlight" onclick="openSanDeModal('@catheGiong.MaCTG')">Lên sàn</button>
                <button class="highlight" onclick="toggleDeliveryForm(this)" data-mactg="@catheGiong.MaCTG">Đẻ</button>
            </td>
        </tr>
    }
</table>

<!-- Form điền số lượng đẻ (ẩn ban đầu) -->
<form id="deliveryForm" asp-controller="CaTheGiong" asp-action="Deliver" method="post" style="display: none;">
    <input type="number" name="quantity" placeholder="Số lượng" required>
    <input type="hidden" name="maCTG" id="maCTGInput"> <!-- Thêm hidden input để chứa giá trị MaCTG -->
    <button type="submit">Đẻ</button>
</form>

<!-- Hiển thị giá trị maCTG và viTriChuong -->
@*<div id="maCTGValue"></div>
    <div id="viTriChuongValue"></div>*@
<!-- Modal -->
<div id="sanDeModal" class="modal">
    <div class="modal-content">
        <h2>Chọn sàn đẻ</h2>
        <span class="close" onclick="hideModal()">&times;</span>
        <ul id="sanDeList"></ul>
        <div class="button-container">
            <button class="highlight" onclick="updateViTriChuong()">Chọn</button>
        </div>
    </div>
</div>
<div id="maCTGValue"></div>

<script>
    function toggleDeliveryForm(button) {
        var deliveryForm = document.getElementById("deliveryForm");
        var maCTG = button.getAttribute("data-mactg"); // Lấy giá trị maCTG từ attribute "data-mactg" của button

        console.log(maCTG); // In giá trị maCTG ra để kiểm tra trong console

        var maCTGValueDiv = document.getElementById("maCTGValue");
        maCTGValueDiv.innerHTML = "MaCTG: " + maCTG; // Hiển thị giá trị maCTG trên giao diện

        if (deliveryForm.style.display === "block") {
            deliveryForm.style.display = "none";
            button.innerHTML = "Đẻ";
            document.getElementById("maCTGInput").value = ""; // Xóa giá trị maCTG trong hidden input
        } else {
            deliveryForm.style.display = "block";
            button.innerHTML = "Ẩn";
            document.getElementById("maCTGInput").value = maCTG; // Gán giá trị maCTG vào hidden input
        }
    }

    var isFiltered = false;

    function filterCatheGiong() {
        if (isFiltered) {
            showAllRows();
            isFiltered = false;
        } else {
            var rows = document.getElementsByTagName("tr");
            for (var i = 1; i < rows.length; i++) {
                var soNgayConLai = parseInt(rows[i].getElementsByTagName("td")[4].innerText);
                if (soNgayConLai >= 10) {
                    rows[i].style.display = "none";
                }
            }
            isFiltered = true;
        }
    }

    function showAllRows() {
        var rows = document.getElementsByTagName("tr");
        for (var i = 1; i < rows.length; i++) {
            rows[i].style.display = "table-row";
        }
    }

    var sanDeData = @Html.Raw(Json.Serialize(ViewBag.SanDeList));

    var selectedMaCTG = "";

    function openSanDeModal(maCTG) {
        selectedMaCTG = maCTG; // Lưu lại maCTG của cá thể giống được chọn
        var modal = document.getElementById("sanDeModal");
        var sanDeList = document.getElementById("sanDeList");
        // Clear previous options
        sanDeList.innerHTML = "";

        // Populate options
        for (var i = 1; i <= sanDeData.length; i++) {
            var li = document.createElement("li");
            li.innerText = "Sàn đẻ " + i;
            li.onclick = function () {
                selectSanDe(this);
            };
            sanDeList.appendChild(li);
        }

        modal.style.display = "block";
    }

    function selectSanDe(li) {
        var selectedLi = document.querySelector("#sanDeList li.selected");
        if (selectedLi) {
            selectedLi.classList.remove("selected");
        }
        li.classList.add("selected");
    }

    function updateViTriChuong() {
        var selectedLi = document.querySelector("#sanDeList li.selected");
        if (selectedLi) {
            var sanDeNumber = selectedLi.innerText.match(/\d+/)[0];
            var viTriChuong = "Sàn đẻ " + sanDeNumber;
            var viTriChuongElement = document.getElementById("viTriChuong_" + selectedMaCTG);
            viTriChuongElement.innerText = viTriChuong;

            // Gửi yêu cầu cập nhật vị trí chuồng lên server
            var maCTG = selectedMaCTG;

            console.log("maCTG:", maCTG); // In giá trị maCTG ra console
            console.log("viTriChuong:", viTriChuong); // In giá trị viTriChuong ra console
            // Hiển thị giá trị maCTG và viTriChuong trong hai thẻ div
            document.getElementById("maCTGValue").innerText = "maCTG: " + maCTG;
            document.getElementById("viTriChuongValue").innerText = "viTriChuong: " + viTriChuong;

            fetch('/CaTheGiong/UpdateViTriChuong', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ maCTG: maCTG, viTriChuong: viTriChuong })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Cập nhật vị trí chuồng trên trang web
                        var viTriChuongElement = document.getElementById("viTriChuong_" + selectedMaCTG);
                        viTriChuongElement.innerText = viTriChuong;

                        // Hiển thị thông báo thành công
                        alert(data.message);
                    } else {
                        // Xử lý khi cập nhật thất bại
                        console.log('Cập nhật thất bại');
                    }
                })
                .catch(error => {
                    // Xử lý khi xảy ra lỗi
                    console.log('Lỗi:', error);
                });
        }
        hideModal(); // Ẩn modal trước
        closeSanDeModal(); // Sau đó mới xóa các option trong danh sách sàn đẻ
    }

    function hideModal() {
        var modal = document.getElementById("sanDeModal");
        modal.style.display = "none";
    }

    function closeSanDeModal() {
        var sanDeList = document.getElementById("sanDeList");
        // Xóa tất cả các option trong danh sách sàn đẻ
        sanDeList.innerHTML = "";
    }


    function deCatheGiong(maCTG) {
        // Xử lý logic khi click Đẻ
        alert("Đẻ cá thể giống với mã " + maCTG);
    }
</script>